#compdef rpk

autoload -U is-at-least

_rpk() {
    typeset -A opt_args
    typeset -a _arguments_options
    local ret=1

    if is-at-least 5.2; then
        _arguments_options=(-s -S -C)
    else
        _arguments_options=(-s -C)
    fi

    local context curcontext="$curcontext" state line
    _arguments "${_arguments_options[@]}" : \
'--color=[This flag controls when to use colors]:WHEN:(auto always never)' \
'--config-dir=[The configuration directory]:PATH:_files' \
'--data-dir=[The directory to store package data]:PATH:_files' \
'--cache-dir=[The directory to store downloaded packages]:PATH:_files' \
'--bin-dir=[The directory installed binaries linked to]:PATH:_files' \
'-q[Suppress any informational output]' \
'--quiet[Suppress any informational output]' \
'-v[Use verbose output]' \
'--verbose[Use verbose output]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
":: :_rpk_commands" \
"*::: :->rpk" \
&& ret=0
    case $state in
    (rpk)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:rpk-command-$line[1]:"
        case $line[1] in
            (init)
_arguments "${_arguments_options[@]}" : \
'-f+[The config file URL to initialize from]:URL: ' \
'--from=[The config file URL to initialize from]:URL: ' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(list)
_arguments "${_arguments_options[@]}" : \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(l)
_arguments "${_arguments_options[@]}" : \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(sync)
_arguments "${_arguments_options[@]}" : \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(s)
_arguments "${_arguments_options[@]}" : \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(add)
_arguments "${_arguments_options[@]}" : \
'--name=[A unique name for the package]:NAME: ' \
'--version=[The version of the package]:VERSION: ' \
'--desc=[A description of the package]:DESC: ' \
'-h[Print help (see more with '\''--help'\'')]' \
'--help[Print help (see more with '\''--help'\'')]' \
':repo -- The github repository hosting the package:' \
&& ret=0
;;
(a)
_arguments "${_arguments_options[@]}" : \
'--name=[A unique name for the package]:NAME: ' \
'--version=[The version of the package]:VERSION: ' \
'--desc=[A description of the package]:DESC: ' \
'-h[Print help (see more with '\''--help'\'')]' \
'--help[Print help (see more with '\''--help'\'')]' \
':repo -- The github repository hosting the package:' \
&& ret=0
;;
(restore)
_arguments "${_arguments_options[@]}" : \
'-h[Print help]' \
'--help[Print help]' \
'::package -- The packages to restore:' \
&& ret=0
;;
(r)
_arguments "${_arguments_options[@]}" : \
'-h[Print help]' \
'--help[Print help]' \
'::package -- The packages to restore:' \
&& ret=0
;;
(update)
_arguments "${_arguments_options[@]}" : \
'-h[Print help]' \
'--help[Print help]' \
'::package -- The packages to update:' \
&& ret=0
;;
(u)
_arguments "${_arguments_options[@]}" : \
'-h[Print help]' \
'--help[Print help]' \
'::package -- The packages to update:' \
&& ret=0
;;
(find)
_arguments "${_arguments_options[@]}" : \
'--top=[The number of results to display]:NUM: ' \
'-h[Print help]' \
'--help[Print help]' \
':query -- The query to search for:' \
&& ret=0
;;
(f)
_arguments "${_arguments_options[@]}" : \
'--top=[The number of results to display]:NUM: ' \
'-h[Print help]' \
'--help[Print help]' \
':query -- The query to search for:' \
&& ret=0
;;
(env)
_arguments "${_arguments_options[@]}" : \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(completions)
_arguments "${_arguments_options[@]}" : \
'-d+[The directory to write the completions to]:DIR:_files' \
'--dir=[The directory to write the completions to]:DIR:_files' \
'-h[Print help (see more with '\''--help'\'')]' \
'--help[Print help (see more with '\''--help'\'')]' \
':shell -- The shell to generate completions for:(bash elvish fish powershell zsh)' \
&& ret=0
;;
(version)
_arguments "${_arguments_options[@]}" : \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
":: :_rpk__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:rpk-help-command-$line[1]:"
        case $line[1] in
            (init)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(list)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(sync)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(add)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(restore)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(update)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(find)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(env)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(completions)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(version)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
}

(( $+functions[_rpk_commands] )) ||
_rpk_commands() {
    local commands; commands=(
'init:Initialize a configuration file' \
'list:List all installed packages' \
'l:List all installed packages' \
'sync:Install any missing packages, re-generating the lock file' \
's:Install any missing packages, re-generating the lock file' \
'add:Add a new plugin to the config file' \
'a:Add a new plugin to the config file' \
'restore:Restore packages to the state in the lockfile' \
'r:Restore packages to the state in the lockfile' \
'update:Update packages and re-generate the lock file' \
'u:Update packages and re-generate the lock file' \
'find:Find packages matching the given query' \
'f:Find packages matching the given query' \
'env:print environment information' \
'completions:Generate completions for the given shell' \
'version:Prints detailed version information' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'rpk commands' commands "$@"
}
(( $+functions[_rpk__add_commands] )) ||
_rpk__add_commands() {
    local commands; commands=()
    _describe -t commands 'rpk add commands' commands "$@"
}
(( $+functions[_rpk__completions_commands] )) ||
_rpk__completions_commands() {
    local commands; commands=()
    _describe -t commands 'rpk completions commands' commands "$@"
}
(( $+functions[_rpk__env_commands] )) ||
_rpk__env_commands() {
    local commands; commands=()
    _describe -t commands 'rpk env commands' commands "$@"
}
(( $+functions[_rpk__find_commands] )) ||
_rpk__find_commands() {
    local commands; commands=()
    _describe -t commands 'rpk find commands' commands "$@"
}
(( $+functions[_rpk__help_commands] )) ||
_rpk__help_commands() {
    local commands; commands=(
'init:Initialize a configuration file' \
'list:List all installed packages' \
'sync:Install any missing packages, re-generating the lock file' \
'add:Add a new plugin to the config file' \
'restore:Restore packages to the state in the lockfile' \
'update:Update packages and re-generate the lock file' \
'find:Find packages matching the given query' \
'env:print environment information' \
'completions:Generate completions for the given shell' \
'version:Prints detailed version information' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'rpk help commands' commands "$@"
}
(( $+functions[_rpk__help__add_commands] )) ||
_rpk__help__add_commands() {
    local commands; commands=()
    _describe -t commands 'rpk help add commands' commands "$@"
}
(( $+functions[_rpk__help__completions_commands] )) ||
_rpk__help__completions_commands() {
    local commands; commands=()
    _describe -t commands 'rpk help completions commands' commands "$@"
}
(( $+functions[_rpk__help__env_commands] )) ||
_rpk__help__env_commands() {
    local commands; commands=()
    _describe -t commands 'rpk help env commands' commands "$@"
}
(( $+functions[_rpk__help__find_commands] )) ||
_rpk__help__find_commands() {
    local commands; commands=()
    _describe -t commands 'rpk help find commands' commands "$@"
}
(( $+functions[_rpk__help__help_commands] )) ||
_rpk__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'rpk help help commands' commands "$@"
}
(( $+functions[_rpk__help__init_commands] )) ||
_rpk__help__init_commands() {
    local commands; commands=()
    _describe -t commands 'rpk help init commands' commands "$@"
}
(( $+functions[_rpk__help__list_commands] )) ||
_rpk__help__list_commands() {
    local commands; commands=()
    _describe -t commands 'rpk help list commands' commands "$@"
}
(( $+functions[_rpk__help__restore_commands] )) ||
_rpk__help__restore_commands() {
    local commands; commands=()
    _describe -t commands 'rpk help restore commands' commands "$@"
}
(( $+functions[_rpk__help__sync_commands] )) ||
_rpk__help__sync_commands() {
    local commands; commands=()
    _describe -t commands 'rpk help sync commands' commands "$@"
}
(( $+functions[_rpk__help__update_commands] )) ||
_rpk__help__update_commands() {
    local commands; commands=()
    _describe -t commands 'rpk help update commands' commands "$@"
}
(( $+functions[_rpk__help__version_commands] )) ||
_rpk__help__version_commands() {
    local commands; commands=()
    _describe -t commands 'rpk help version commands' commands "$@"
}
(( $+functions[_rpk__init_commands] )) ||
_rpk__init_commands() {
    local commands; commands=()
    _describe -t commands 'rpk init commands' commands "$@"
}
(( $+functions[_rpk__list_commands] )) ||
_rpk__list_commands() {
    local commands; commands=()
    _describe -t commands 'rpk list commands' commands "$@"
}
(( $+functions[_rpk__restore_commands] )) ||
_rpk__restore_commands() {
    local commands; commands=()
    _describe -t commands 'rpk restore commands' commands "$@"
}
(( $+functions[_rpk__sync_commands] )) ||
_rpk__sync_commands() {
    local commands; commands=()
    _describe -t commands 'rpk sync commands' commands "$@"
}
(( $+functions[_rpk__update_commands] )) ||
_rpk__update_commands() {
    local commands; commands=()
    _describe -t commands 'rpk update commands' commands "$@"
}
(( $+functions[_rpk__version_commands] )) ||
_rpk__version_commands() {
    local commands; commands=()
    _describe -t commands 'rpk version commands' commands "$@"
}

if [ "$funcstack[1]" = "_rpk" ]; then
    _rpk "$@"
else
    compdef _rpk rpk
fi
